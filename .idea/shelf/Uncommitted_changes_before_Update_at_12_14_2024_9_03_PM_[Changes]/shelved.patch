Index: src/CoreGame/GamePanel.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package CoreGame;\r\n\r\nimport CoreGame.Enums.GameState;\r\nimport CoreGame.KeyHandlerComponent.KeyHandler;\r\nimport CoreGame.SoundComponent.SoundManager;\r\nimport Entity.Player;\r\nimport Tile.TileManager;\r\nimport Entity.Object.Master.BaseObject;\r\n\r\nimport javax.swing.*;\r\nimport java.awt.*;\r\n\r\n\r\npublic class GamePanel extends JPanel implements Runnable\r\n{\r\n    private static GamePanel instance;\r\n    public static final int FPS = 60;\r\n    //Screen Setting property://\r\n    static final int originalTileSize = 16;\r\n    public static final int scale = 3;\r\n    public static final int tileSize = originalTileSize * scale;\r\n\r\n    public static final int maxScreenCol = 16; // sau them public\r\n    public static final int maxScreenRow = 12; //them public\r\n    public static final int screenWidth = tileSize*maxScreenCol;\r\n    public static final int screenHeight = tileSize*maxScreenRow;\r\n    public static int truePlayerScreenX = screenWidth/2 - tileSize/2;\r\n    public static int truePlayerScreenY = screenHeight/2 - tileSize/2;\r\n\r\n    TileManager tileManager = new TileManager();\r\n\r\n    Thread gameThread;\r\n\r\n    // ENTITY AND OBJECT\r\n    public Player player;\r\n    public BaseObject obj[] = new BaseObject[4];\r\n    public GameState gameState;\r\n    public final int playState = 1;\r\n    public final int pauseState = 2;\r\n\r\n\r\n\r\n    public GamePanel()\r\n    {\r\n        this.setPreferredSize(new Dimension(screenWidth,screenHeight));\r\n        this.setBackground((Color.blue));\r\n        this.setDoubleBuffered(true);\r\n        //this.addKeyListener(KeyHandler.getInstKeyHdl());\r\n        addKeyListener(KeyHandler.getInstance());\r\n        this.setFocusable(true);\r\n        this.requestFocus();\r\n        player = new Player();\r\n    }\r\n\r\n    public static GamePanel getInstGamePanel()\r\n    {\r\n        if (instance == null) instance = new GamePanel();\r\n        return instance;\r\n    }\r\n\r\n    public void setupGame()\r\n    {\r\n        SoundManager.playSound(0.25f,false,\"/Sound/SFX/fanfare.wav\");\r\n        AssetSetter.SetUpObject();\r\n        gameState = GameState.Run;\r\n    }\r\n\r\n    public void startGameThread()\r\n    {\r\n        gameThread = new Thread(this);\r\n        gameThread.start();\r\n    }\r\n\r\n    /**this function call every frame*/\r\n    public void update(float DeltaTime)\r\n    {\r\n        if (gameState == GameState.Run) player.update(DeltaTime);\r\n        if (gameState == GameState.Pause) return;\r\n    }\r\n    /**this draw function call every frame*/\r\n    public void paintComponent(Graphics g)\r\n    {\r\n        super.paintComponent(g);\r\n        Graphics2D g2 = (Graphics2D)g; //convert 'g' from Graphics type  into Graphics2D to create 'g2'\r\n        tileManager.draw(g2); //  add\r\n        for (int i = 0; i < obj.length;i++){\r\n            if (obj[i] != null){\r\n                obj[i].draw(g2);\r\n            }\r\n        }\r\n        player.renderSprite(g2);\r\n\r\n        g2.dispose();\r\n    }\r\n\r\n    @Override\r\n    public void run()\r\n    {\r\n        double drawIntervalUnit = 1000000000 / FPS;// khoang thoi gian: Interval = 1s / FPS\r\n        double passedDelta = 0; //supper precise\r\n        long lastTime = System.nanoTime();\r\n        long currentTime;\r\n        long timer = 0;\r\n        int drawCallCount = 0;\r\n        while (gameThread != null)\r\n        {\r\n            currentTime = System.nanoTime();\r\n            passedDelta += (currentTime - lastTime)/drawIntervalUnit;\r\n            timer += currentTime - lastTime;\r\n            // 1 frame passed://\r\n            if(passedDelta >= 1)\r\n            {\r\n                update(1f/FPS);\r\n                repaint();// this is the way to call \"painComponent\"\r\n                passedDelta --;\r\n                drawCallCount ++;\r\n                //System.out.println(\"hellooooooooooooooooo\");\r\n            }\r\n            lastTime = currentTime;\r\n            if(timer > 1000000000)\r\n            {\r\n                //System.out.println(\"Fps: \"+ drawCallCount);\r\n                timer = 0;\r\n                drawCallCount = 0;\r\n            }\r\n        }\r\n    }\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/CoreGame/GamePanel.java b/src/CoreGame/GamePanel.java
--- a/src/CoreGame/GamePanel.java	(revision ee2ce28acc424c28badef1ca67306f979ea44b42)
+++ b/src/CoreGame/GamePanel.java	(date 1734184769040)
@@ -1,3 +1,4 @@
+
 package CoreGame;
 
 import CoreGame.Enums.GameState;
@@ -35,15 +36,14 @@
     public Player player;
     public BaseObject obj[] = new BaseObject[4];
     public GameState gameState;
-    public final int playState = 1;
-    public final int pauseState = 2;
+    public UI ui = new UI(this);
 
 
 
     public GamePanel()
     {
         this.setPreferredSize(new Dimension(screenWidth,screenHeight));
-        this.setBackground((Color.blue));
+        this.setBackground((Color.black));
         this.setDoubleBuffered(true);
         //this.addKeyListener(KeyHandler.getInstKeyHdl());
         addKeyListener(KeyHandler.getInstance());
@@ -62,7 +62,7 @@
     {
         SoundManager.playSound(0.25f,false,"/Sound/SFX/fanfare.wav");
         AssetSetter.SetUpObject();
-        gameState = GameState.Run;
+        gameState = GameState.Tittle;
     }
 
     public void startGameThread()
@@ -74,22 +74,28 @@
     /**this function call every frame*/
     public void update(float DeltaTime)
     {
-        if (gameState == GameState.Run) player.update(DeltaTime);
+        System.out.println("State:"+ gameState);
+        if(gameState == GameState.Run)  player.update(DeltaTime);
         if (gameState == GameState.Pause) return;
     }
     /**this draw function call every frame*/
     public void paintComponent(Graphics g)
     {
         super.paintComponent(g);
-        Graphics2D g2 = (Graphics2D)g; //convert 'g' from Graphics type  into Graphics2D to create 'g2'
-        tileManager.draw(g2); //  add
-        for (int i = 0; i < obj.length;i++){
-            if (obj[i] != null){
+        Graphics2D g2 = (Graphics2D)g;
+        ui.draw(g2);
+        if(gameState == GameState.Tittle) ui.draw(g2);
+        else
+        {
+            tileManager.draw(g2); //  add
+            for (int i = 0; i < obj.length;i++)
+            {
+                if (obj[i] == null) continue;
                 obj[i].draw(g2);
             }
-        }
-        player.renderSprite(g2);
-
+            player.renderSprite(g2);
+            ui.draw(g2); // need call after map for displaying head up
+        }
         g2.dispose();
     }
 
Index: src/CoreGame/UI.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/CoreGame/UI.java b/src/CoreGame/UI.java
new file mode 100644
--- /dev/null	(date 1734184593416)
+++ b/src/CoreGame/UI.java	(date 1734184593416)
@@ -0,0 +1,80 @@
+package CoreGame;
+
+import CoreGame.Enums.GameState;
+
+import java.awt.*;
+import java.awt.Color;
+import  java.awt.Graphics2D;
+
+public class UI
+{
+    Font arial_40, arial_80B;
+    Graphics2D g2;
+    public int commandNum = 0;
+    public UI (GamePanel gamePanel)
+    {
+        arial_40 = new Font("Arial", Font.PLAIN, 40);
+        arial_80B = new Font("Arial", Font.PLAIN, 80);
+    }
+    public void draw(Graphics2D g2)
+    {
+        this.g2 = g2;
+        g2.setFont(arial_40);
+        g2.setColor(Color.WHITE);
+        switch(GamePanel.getInstGamePanel().gameState)
+        {
+            case GameState.Tittle :
+                System.out.println("Title");
+                drawTileScreen();
+                break;
+            case GameState.Run:
+                break;
+            case GameState.Pause:
+                drawPauseScreen();
+                break;
+        }
+    }
+
+    public void drawTileScreen ()
+    {
+        System.out.println("Actual Tittle drawing");
+        g2.setFont(g2.getFont().deriveFont(Font.BOLD, 64));
+        String text = "TopDown2DGame";
+        int x = 64* GamePanel.scale;
+        int y = 64* GamePanel.scale;
+        g2.setColor(Color.white);
+        g2.drawString(text, x, y);
+
+        g2.setFont(g2.getFont().deriveFont(Font.BOLD, 32));
+        text = "New game";
+        x = 64* GamePanel.scale;
+        y += GamePanel.tileSize *2;
+        g2.drawString(text, x, y);
+        if(commandNum == 0){
+            g2.drawString(">",x- GamePanel.tileSize, y );
+        }
+
+        text = "Load game";
+        x = 64* GamePanel.scale;
+        y += GamePanel.tileSize;
+        g2.drawString(text, x, y);
+        if(commandNum == 1){
+            g2.drawString(">",x- GamePanel.tileSize, y );
+        }
+        text = "Quit";
+        x = 64* GamePanel.scale;
+        y += GamePanel.tileSize;
+        g2.drawString(text, x, y);
+        if(commandNum == 2){
+            g2.drawString(">",x- GamePanel.tileSize, y );
+        }
+    }
+
+    public void drawPauseScreen(){
+        String text = "PAUSE";
+        int x = 64* GamePanel.scale;
+        int y = 64* GamePanel.scale;
+        g2.drawString (text, x , y);
+    }
+
+}
Index: .idea/misc.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<project version=\"4\">\r\n  <component name=\"ProjectRootManager\" version=\"2\" languageLevel=\"JDK_23\" default=\"true\" project-jdk-name=\"corretto-21\" project-jdk-type=\"JavaSDK\">\r\n    <output url=\"file://$PROJECT_DIR$/out\" />\r\n  </component>\r\n</project>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/misc.xml b/.idea/misc.xml
--- a/.idea/misc.xml	(revision ee2ce28acc424c28badef1ca67306f979ea44b42)
+++ b/.idea/misc.xml	(date 1733148334120)
@@ -1,6 +1,6 @@
 <?xml version="1.0" encoding="UTF-8"?>
 <project version="4">
-  <component name="ProjectRootManager" version="2" languageLevel="JDK_23" default="true" project-jdk-name="corretto-21" project-jdk-type="JavaSDK">
+  <component name="ProjectRootManager" version="2" languageLevel="JDK_21" default="true" project-jdk-name="corretto-21" project-jdk-type="JavaSDK">
     <output url="file://$PROJECT_DIR$/out" />
   </component>
 </project>
\ No newline at end of file
Index: .idea/workspace.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<project version=\"4\">\r\n  <component name=\"AutoImportSettings\">\r\n    <option name=\"autoReloadType\" value=\"SELECTIVE\" />\r\n  </component>\r\n  <component name=\"ChangeListManager\">\r\n    <list default=\"true\" id=\"072a3bad-9f41-43ec-a131-48b428e83134\" name=\"Changes\" comment=\"thêm chức năng Volume ở Sound.java&#10;thay biến phát âm thanh thành string + tìm đc tên file audio ở folder resources\">\r\n      <change beforePath=\"$PROJECT_DIR$/.idea/workspace.xml\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/.idea/workspace.xml\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/src/CoreGame/GamePanel.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/src/CoreGame/GamePanel.java\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/src/CoreGame/Sound.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/src/CoreGame/Sound.java\" afterDir=\"false\" />\r\n    </list>\r\n    <option name=\"SHOW_DIALOG\" value=\"false\" />\r\n    <option name=\"HIGHLIGHT_CONFLICTS\" value=\"true\" />\r\n    <option name=\"HIGHLIGHT_NON_ACTIVE_CHANGELIST\" value=\"false\" />\r\n    <option name=\"LAST_RESOLUTION\" value=\"IGNORE\" />\r\n  </component>\r\n  <component name=\"FileTemplateManagerImpl\">\r\n    <option name=\"RECENT_TEMPLATES\">\r\n      <list>\r\n        <option value=\"Class\" />\r\n      </list>\r\n    </option>\r\n  </component>\r\n  <component name=\"Git.Settings\">\r\n    <option name=\"RECENT_BRANCH_BY_REPOSITORY\">\r\n      <map>\r\n        <entry key=\"$PROJECT_DIR$\" value=\"workbranch\" />\r\n      </map>\r\n    </option>\r\n    <option name=\"RECENT_GIT_ROOT_PATH\" value=\"$PROJECT_DIR$\" />\r\n  </component>\r\n  <component name=\"GitHubPullRequestSearchHistory\">{\r\n  &quot;lastFilter&quot;: {\r\n    &quot;state&quot;: &quot;OPEN&quot;,\r\n    &quot;assignee&quot;: &quot;NguyenBao1234&quot;\r\n  }\r\n}</component>\r\n  <component name=\"GithubPullRequestsUISettings\">{\r\n  &quot;selectedUrlAndAccountId&quot;: {\r\n    &quot;url&quot;: &quot;https://github.com/NguyenBao1234/gameTopdown&quot;,\r\n    &quot;accountId&quot;: &quot;5bcfadae-ee6f-4a2c-9fb1-e6868b8ef68a&quot;\r\n  }\r\n}</component>\r\n  <component name=\"ProjectColorInfo\">{\r\n  &quot;associatedIndex&quot;: 7\r\n}</component>\r\n  <component name=\"ProjectId\" id=\"2onhdmAVjICdR1O0R6sgpyyG1mV\" />\r\n  <component name=\"ProjectLevelVcsManager\" settingsEditedManually=\"true\" />\r\n  <component name=\"ProjectViewState\">\r\n    <option name=\"hideEmptyMiddlePackages\" value=\"true\" />\r\n    <option name=\"showLibraryContents\" value=\"true\" />\r\n  </component>\r\n  <component name=\"PropertiesComponent\">{\r\n  &quot;keyToString&quot;: {\r\n    &quot;Application.ImageGridSplitter.executor&quot;: &quot;Run&quot;,\r\n    &quot;Application.Main.executor&quot;: &quot;Run&quot;,\r\n    &quot;RunOnceActivity.ShowReadmeOnStart&quot;: &quot;true&quot;,\r\n    &quot;RunOnceActivity.git.unshallow&quot;: &quot;true&quot;,\r\n    &quot;git-widget-placeholder&quot;: &quot;Sound&quot;,\r\n    &quot;kotlin-language-version-configured&quot;: &quot;true&quot;,\r\n    &quot;last_opened_file_path&quot;: &quot;D:/ProjectSchool/OnClass/gameTopdown/resources/Player&quot;,\r\n    &quot;onboarding.tips.debug.path&quot;: &quot;D:/ProjectSchool/OnClass/gameTopdown/src/Main.java&quot;,\r\n    &quot;settings.editor.selected.configurable&quot;: &quot;editor.preferences.completion&quot;\r\n  }\r\n}</component>\r\n  <component name=\"RecentsManager\">\r\n    <key name=\"CopyFile.RECENT_KEYS\">\r\n      <recent name=\"D:\\ProjectSchool\\OnClass\\gameTopdown\\resources\\Player\" />\r\n    </key>\r\n    <key name=\"MoveFile.RECENT_KEYS\">\r\n      <recent name=\"D:\\linh\\dai hoc\\cong nghe Java\\IdeaProjects\\gameTopdown\\src\\Resource\\Sound\" />\r\n      <recent name=\"D:\\ProjectSchool\\OnClass\\gameTopdown\\resources\\Player\\ImageSet\" />\r\n      <recent name=\"D:\\ProjectSchool\\OnClass\\gameTopdown\\resources\\Player\" />\r\n    </key>\r\n  </component>\r\n  <component name=\"SpellCheckerSettings\" RuntimeDictionaries=\"0\" Folders=\"0\" CustomDictionaries=\"0\" DefaultDictionary=\"application-level\" UseSingleDictionary=\"true\" transferred=\"true\" />\r\n  <component name=\"TaskManager\">\r\n    <task active=\"true\" id=\"Default\" summary=\"Default task\">\r\n      <changelist id=\"072a3bad-9f41-43ec-a131-48b428e83134\" name=\"Changes\" comment=\"\" />\r\n      <created>1731511338608</created>\r\n      <option name=\"number\" value=\"Default\" />\r\n      <option name=\"presentableId\" value=\"Default\" />\r\n      <updated>1731511338608</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00001\" summary=\"- add scripts\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1731572824216</created>\r\n      <option name=\"number\" value=\"00001\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00001\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1731572824216</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00002\" summary=\"- KeyHandler: 255 Keys ( almost full key )&#10;- Entity has state for direction, it always holds the Last state when stop move &#10;- Animation Feature in Entity&#10;- Multi animation BaseCharacter : render, flipBook fps per frame,&#10;- HelpDevGameTool: ImageGridSplitter; ImageLoader (load image in folder to make flipBook)\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1731860495046</created>\r\n      <option name=\"number\" value=\"00002\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00002\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1731860495046</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00003\" summary=\"- add more image for animations\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1731861370106</created>\r\n      <option name=\"number\" value=\"00003\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00003\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1731861370106</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00004\" summary=\"add basic Sound packages + Sound class &#10;add setupGame() in GamePanel.java and call in Main.java\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1731987855015</created>\r\n      <option name=\"number\" value=\"00004\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00004\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1731987855015</updated>\r\n    </task>\r\n    <option name=\"localTasksCounter\" value=\"5\" />\r\n    <servers />\r\n  </component>\r\n  <component name=\"Vcs.Log.Tabs.Properties\">\r\n    <option name=\"OPEN_GENERIC_TABS\">\r\n      <map>\r\n        <entry key=\"00ff3bdb-3691-497e-8eb3-b7d7f8c9f6ac\" value=\"TOOL_WINDOW\" />\r\n      </map>\r\n    </option>\r\n    <option name=\"TAB_STATES\">\r\n      <map>\r\n        <entry key=\"00ff3bdb-3691-497e-8eb3-b7d7f8c9f6ac\">\r\n          <value>\r\n            <State>\r\n              <option name=\"CUSTOM_BOOLEAN_PROPERTIES\">\r\n                <map>\r\n                  <entry key=\"Show.Git.Branches\" value=\"true\" />\r\n                </map>\r\n              </option>\r\n            </State>\r\n          </value>\r\n        </entry>\r\n        <entry key=\"MAIN\">\r\n          <value>\r\n            <State>\r\n              <option name=\"FILTERS\">\r\n                <map>\r\n                  <entry key=\"branch\">\r\n                    <value>\r\n                      <list>\r\n                        <option value=\"Sound\" />\r\n                      </list>\r\n                    </value>\r\n                  </entry>\r\n                </map>\r\n              </option>\r\n            </State>\r\n          </value>\r\n        </entry>\r\n      </map>\r\n    </option>\r\n  </component>\r\n  <component name=\"VcsManagerConfiguration\">\r\n    <MESSAGE value=\"- add scripts\" />\r\n    <MESSAGE value=\"- KeyHandler: 255 Keys ( almost full key )&#10;- Entity has state for direction, it always holds the Last state when stop move &#10;- Animation Feature in Entity&#10;- Multi animation BaseCharacter : render, flipBook fps per frame,&#10;- HelpDevGameTool: ImageGridSplitter; ImageLoader (load image in folder to make flipBook)\" />\r\n    <MESSAGE value=\"- add more image for animations\" />\r\n    <MESSAGE value=\"add basic Sound packages + Sound class &#10;add setupGame() in GamePanel.java and call in Main.java\" />\r\n    <option name=\"LAST_COMMIT_MESSAGE\" value=\"add basic Sound packages + Sound class &#10;add setupGame() in GamePanel.java and call in Main.java\" />\r\n  </component>\r\n  <component name=\"XDebuggerManager\">\r\n    <breakpoint-manager>\r\n      <breakpoints>\r\n        <breakpoint enabled=\"true\" type=\"java-exception\">\r\n          <properties class=\"javax.imageio.IIOException\" package=\"javax.imageio\" />\r\n          <option name=\"timeStamp\" value=\"2\" />\r\n        </breakpoint>\r\n        <breakpoint enabled=\"true\" type=\"java-exception\">\r\n          <properties class=\"java.util.NoSuchElementException\" package=\"java.util\" />\r\n          <option name=\"timeStamp\" value=\"4\" />\r\n        </breakpoint>\r\n      </breakpoints>\r\n    </breakpoint-manager>\r\n  </component>\r\n</project>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/workspace.xml b/.idea/workspace.xml
--- a/.idea/workspace.xml	(revision ee2ce28acc424c28badef1ca67306f979ea44b42)
+++ b/.idea/workspace.xml	(date 1734184769117)
@@ -5,9 +5,12 @@
   </component>
   <component name="ChangeListManager">
     <list default="true" id="072a3bad-9f41-43ec-a131-48b428e83134" name="Changes" comment="thêm chức năng Volume ở Sound.java&#10;thay biến phát âm thanh thành string + tìm đc tên file audio ở folder resources">
+      <change afterPath="$PROJECT_DIR$/src/CoreGame/UI.java" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/.idea/misc.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/misc.xml" afterDir="false" />
       <change beforePath="$PROJECT_DIR$/.idea/workspace.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/workspace.xml" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/src/CoreGame/Enums/GameState.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/CoreGame/Enums/GameState.java" afterDir="false" />
       <change beforePath="$PROJECT_DIR$/src/CoreGame/GamePanel.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/CoreGame/GamePanel.java" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/src/CoreGame/Sound.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/CoreGame/Sound.java" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/src/Entity/Player.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/Entity/Player.java" afterDir="false" />
     </list>
     <option name="SHOW_DIALOG" value="false" />
     <option name="HIGHLIGHT_CONFLICTS" value="true" />
@@ -37,8 +40,8 @@
 }</component>
   <component name="GithubPullRequestsUISettings">{
   &quot;selectedUrlAndAccountId&quot;: {
-    &quot;url&quot;: &quot;https://github.com/NguyenBao1234/gameTopdown&quot;,
-    &quot;accountId&quot;: &quot;5bcfadae-ee6f-4a2c-9fb1-e6868b8ef68a&quot;
+    &quot;url&quot;: &quot;https://github.com/NguyenBao1234/gameTopdown.git&quot;,
+    &quot;accountId&quot;: &quot;870634f9-e42c-476d-8044-b0ee83a428bb&quot;
   }
 }</component>
   <component name="ProjectColorInfo">{
@@ -56,11 +59,16 @@
     &quot;Application.Main.executor&quot;: &quot;Run&quot;,
     &quot;RunOnceActivity.ShowReadmeOnStart&quot;: &quot;true&quot;,
     &quot;RunOnceActivity.git.unshallow&quot;: &quot;true&quot;,
-    &quot;git-widget-placeholder&quot;: &quot;Sound&quot;,
+    &quot;git-widget-placeholder&quot;: &quot;Hiếu&quot;,
     &quot;kotlin-language-version-configured&quot;: &quot;true&quot;,
-    &quot;last_opened_file_path&quot;: &quot;D:/ProjectSchool/OnClass/gameTopdown/resources/Player&quot;,
+    &quot;last_opened_file_path&quot;: &quot;D:/1/Game&quot;,
+    &quot;node.js.detected.package.eslint&quot;: &quot;true&quot;,
+    &quot;node.js.selected.package.eslint&quot;: &quot;(autodetect)&quot;,
+    &quot;node.js.selected.package.tslint&quot;: &quot;(autodetect)&quot;,
+    &quot;nodejs_package_manager_path&quot;: &quot;npm&quot;,
     &quot;onboarding.tips.debug.path&quot;: &quot;D:/ProjectSchool/OnClass/gameTopdown/src/Main.java&quot;,
-    &quot;settings.editor.selected.configurable&quot;: &quot;editor.preferences.completion&quot;
+    &quot;settings.editor.selected.configurable&quot;: &quot;editor.preferences.completion&quot;,
+    &quot;vue.rearranger.settings.migration&quot;: &quot;true&quot;
   }
 }</component>
   <component name="RecentsManager">
@@ -72,6 +80,14 @@
       <recent name="D:\ProjectSchool\OnClass\gameTopdown\resources\Player\ImageSet" />
       <recent name="D:\ProjectSchool\OnClass\gameTopdown\resources\Player" />
     </key>
+  </component>
+  <component name="SharedIndexes">
+    <attachedChunks>
+      <set>
+        <option value="bundled-jdk-9823dce3aa75-fdfe4dae3a2d-intellij.indexing.shared.core-IU-243.21565.193" />
+        <option value="bundled-js-predefined-d6986cc7102b-e768b9ed790e-JavaScript-IU-243.21565.193" />
+      </set>
+    </attachedChunks>
   </component>
   <component name="SpellCheckerSettings" RuntimeDictionaries="0" Folders="0" CustomDictionaries="0" DefaultDictionary="application-level" UseSingleDictionary="true" transferred="true" />
   <component name="TaskManager">
@@ -81,6 +97,15 @@
       <option name="number" value="Default" />
       <option name="presentableId" value="Default" />
       <updated>1731511338608</updated>
+      <workItem from="1733292711567" duration="343000" />
+      <workItem from="1733293068448" duration="595000" />
+      <workItem from="1734028281956" duration="1390000" />
+      <workItem from="1734088366061" duration="53000" />
+      <workItem from="1734088671457" duration="83000" />
+      <workItem from="1734101849924" duration="8856000" />
+      <workItem from="1734110903228" duration="387000" />
+      <workItem from="1734112097453" duration="619000" />
+      <workItem from="1734181015319" duration="3724000" />
     </task>
     <task id="LOCAL-00001" summary="- add scripts">
       <option name="closed" value="true" />
@@ -117,6 +142,9 @@
     <option name="localTasksCounter" value="5" />
     <servers />
   </component>
+  <component name="TypeScriptGeneratedFilesManager">
+    <option name="version" value="3" />
+  </component>
   <component name="Vcs.Log.Tabs.Properties">
     <option name="OPEN_GENERIC_TABS">
       <map>
@@ -161,7 +189,8 @@
     <MESSAGE value="- KeyHandler: 255 Keys ( almost full key )&#10;- Entity has state for direction, it always holds the Last state when stop move &#10;- Animation Feature in Entity&#10;- Multi animation BaseCharacter : render, flipBook fps per frame,&#10;- HelpDevGameTool: ImageGridSplitter; ImageLoader (load image in folder to make flipBook)" />
     <MESSAGE value="- add more image for animations" />
     <MESSAGE value="add basic Sound packages + Sound class &#10;add setupGame() in GamePanel.java and call in Main.java" />
-    <option name="LAST_COMMIT_MESSAGE" value="add basic Sound packages + Sound class &#10;add setupGame() in GamePanel.java and call in Main.java" />
+    <MESSAGE value="thêm chức năng Volume ở Sound.java&#10;thay biến phát âm thanh thành string + tìm đc tên file audio ở folder resources" />
+    <option name="LAST_COMMIT_MESSAGE" value="thêm chức năng Volume ở Sound.java&#10;thay biến phát âm thanh thành string + tìm đc tên file audio ở folder resources" />
   </component>
   <component name="XDebuggerManager">
     <breakpoint-manager>
Index: src/Entity/Player.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package Entity;\r\n\r\nimport CoreGame.CollisionChecker;\r\nimport CoreGame.Enums.Collision;\r\n\r\nimport CoreGame.Enums.GameState;\r\nimport CoreGame.GamePanel;\r\nimport CoreGame.KeyHandlerComponent.KeyHandler;\r\nimport CoreGame.SoundComponent.SoundManager;\r\nimport Entity.Object.Master.BaseObject;\r\nimport Entity.Object.Master.InteractInterface;\r\nimport HelpDevGameTool.ImageLoader;\r\n\r\nimport java.awt.*;\r\nimport java.awt.event.KeyEvent;\r\nimport java.awt.image.BufferedImage;\r\n\r\n\r\npublic class Player extends BaseCharacter\r\n{\r\n    public final int screenX;\r\n    public final int screenY;\r\n    public float speedFactor = 1;\r\n    private CollisionChecker collisionChecker;\r\n\r\n    public Player()\r\n    {\r\n        //Setup Basic character property:\r\n        flipBookArr = new BufferedImage[8][];\r\n        setupAnimations();\r\n        setAnimationToUse(0,4);\r\n        worldX = 2*GamePanel.tileSize;\r\n        worldY = 5* GamePanel.tileSize;\r\n        screenX = GamePanel.screenWidth /2 - 64*GamePanel.scale/2;\r\n        screenY = GamePanel.screenHeight /2 - 64*GamePanel.scale/2;\r\n\r\n        collisionArea = new Rectangle();\r\n        collisionArea.x = 2* GamePanel.scale;\r\n        collisionArea.y = 17* GamePanel.scale;\r\n        collisionArea.width = 11* GamePanel.scale;\r\n        collisionArea.height = 5* GamePanel.scale;\r\n        collisionMode = Collision.Block;\r\n        collisionChecker = new CollisionChecker();\r\n        SetupPlayerInputComponent();\r\n    }\r\n\r\n    private void SetupPlayerInputComponent()\r\n    {\r\n        KeyHandler ControllerComp = KeyHandler.getInstance();\r\n        ControllerComp.BindAction(KeyEvent.VK_E,true, this::Interact);\r\n        ControllerComp.BindAction(KeyEvent.VK_P, true,this::PauseGame);\r\n    }\r\n    public void update(float DeltaTime)\r\n    {\r\n        InputAxisMove();\r\n        handleLocationByCollision();\r\n        runFlipBook(DeltaTime);\r\n        handelAnimation();\r\n        collisionChecker.getOverlappedObjects(this);\r\n\r\n    }\r\n\r\n    public void renderSprite(Graphics2D g2)\r\n    {\r\n        g2.drawImage(sprite,screenX,screenY, 64* GamePanel.scale,64* GamePanel.scale, null);\r\n    }\r\n\r\n    \r\n    void InputAxisMove()\r\n    {\r\n        if( vAxisX !=0 && vAxisY !=0 ) speedFactor = 3/4f;\r\n\r\n        if (!KeyHandler.isKeyPressed(KeyEvent.VK_A) && !KeyHandler.isKeyPressed(KeyEvent.VK_D)) updateCurrentDirectionX(0);\r\n\r\n        if(KeyHandler.isKeyPressed(KeyEvent.VK_A))\r\n        {\r\n            updateCurrentDirectionX(-1);\r\n            worldX -= (int) (speed * speedFactor);\r\n        }\r\n\r\n        if(KeyHandler.isKeyPressed(KeyEvent.VK_D))\r\n        {\r\n            updateCurrentDirectionX(1);\r\n            worldX += (int) (speed * speedFactor);\r\n        }\r\n\r\n        if (!KeyHandler.isKeyPressed(KeyEvent.VK_W) && !KeyHandler.isKeyPressed(KeyEvent.VK_S)) updateCurrentDirectionY(0);\r\n\r\n        if(KeyHandler.isKeyPressed(KeyEvent.VK_S))\r\n        {\r\n            updateCurrentDirectionY(-1);\r\n            worldY += (int) (speed * speedFactor); // Y tang = di xuong duoi man hinh\r\n        }\r\n        if(KeyHandler.isKeyPressed(KeyEvent.VK_W))\r\n        {\r\n            updateCurrentDirectionY(1);\r\n            worldY -= (int)(speed * speedFactor);\r\n        }\r\n    }\r\n\r\n    void handleLocationByCollision()\r\n    {\r\n        if(collisionMode == Collision.NoCollision) return;\r\n        collisionChecker.RespondToMap(this);\r\n        if(bColliding)\r\n        {\r\n            switch(getCurrentDirection())\r\n            {\r\n                case down:\r\n                    worldY -= (int) (speed * speedFactor);\r\n                    break;\r\n                case up:\r\n                    worldY += (int) (speed * speedFactor);\r\n                    break;\r\n                case left:\r\n                    worldX += (int) (speed * speedFactor);\r\n                    break;\r\n                case right:\r\n                    worldX -= (int) (speed * speedFactor);\r\n                    break;\r\n            }\r\n        }\r\n    }\r\n    void PauseGame() {\r\n        if (KeyHandler.isKeyPressed(KeyEvent.VK_P)) {\r\n            if (GamePanel.getInstGamePanel().gameState == GameState.Run)\r\n            {\r\n                GamePanel.getInstGamePanel().gameState = GameState.Pause;\r\n            }\r\n            else if (GamePanel.getInstGamePanel().gameState == GameState.Pause)\r\n            {\r\n                GamePanel.getInstGamePanel().gameState = GameState.Run;\r\n            }\r\n        }\r\n    }\r\n    /**Choose animation*/\r\n    void handelAnimation()\r\n    {\r\n        switch (getCurrentDirection())\r\n        {\r\n            case up :\r\n                //System.out.println(\"up\");\r\n                if(vAxisY == 0) setAnimationToUse(1,4);\r\n                else setAnimationToUse(5,4);\r\n                break;\r\n            case down:\r\n                //System.out.println(\"down\");\r\n                if(vAxisY == 0) setAnimationToUse(0,4);\r\n                else setAnimationToUse(4,4);\r\n                break;\r\n            case left:\r\n                //System.out.println(\"left\");\r\n                if(vAxisX == 0) setAnimationToUse(2,4);\r\n                else setAnimationToUse(6,4);\r\n                break;\r\n            case right:\r\n                //System.out.println(\"right\");\r\n                if(vAxisX == 0) setAnimationToUse(3,4);\r\n                else setAnimationToUse(7,4);\r\n                break;\r\n        }\r\n\r\n    }\r\n\r\n    //Hardcode\r\n    void setupAnimations()\r\n    {\r\n        flipBookArr[0] = ImageLoader.makeFlipBook(\"/Player/front/idle\");\r\n\r\n        flipBookArr[1] = ImageLoader.makeFlipBook(\"/Player/back/idle\");\r\n\r\n        flipBookArr[2] = ImageLoader.makeFlipBook(\"/Player/left/idle\");\r\n\r\n        flipBookArr[3] = ImageLoader.makeFlipBook(\"/Player/right/idle\");\r\n\r\n        flipBookArr[4] = ImageLoader.makeFlipBook(\"/Player/front/walk\");\r\n\r\n        flipBookArr[5] = ImageLoader.makeFlipBook(\"/Player/back/walk\");\r\n\r\n        flipBookArr[6] = ImageLoader.makeFlipBook(\"/Player/left/walk\");\r\n\r\n        flipBookArr[7] = ImageLoader.makeFlipBook(\"/Player/right/walk\");\r\n    }\r\n\r\n    void Pause()\r\n    {\r\n        System.out.println(\"Bind Function 'TestBindAction' called\");\r\n        SoundManager.playSound(1,false,\"/Sound/SFX/coin.wav\");\r\n    }\r\n    void Interact()\r\n    {\r\n        int BiasInteractBox = 4* GamePanel.scale;\r\n        for(BaseObject overlappedObject : collisionChecker.getOverlappedObjectsInBox(worldX + collisionArea.x - BiasInteractBox,worldY + collisionArea.y - BiasInteractBox, collisionArea.width +BiasInteractBox*2,collisionArea.height + BiasInteractBox*2))\r\n        {\r\n            if(overlappedObject instanceof InteractInterface)\r\n            {\r\n                boolean interactSuccess = ((InteractInterface) overlappedObject).interact();\r\n                System.out.println(\"Interact:\"+interactSuccess);\r\n            }\r\n        }\r\n    }\r\n}\r\n
===================================================================
diff --git a/src/Entity/Player.java b/src/Entity/Player.java
--- a/src/Entity/Player.java	(revision ee2ce28acc424c28badef1ca67306f979ea44b42)
+++ b/src/Entity/Player.java	(date 1734184906742)
@@ -16,8 +16,10 @@
 import java.awt.image.BufferedImage;
 
 
+
 public class Player extends BaseCharacter
 {
+    GamePanel gamePanel;
     public final int screenX;
     public final int screenY;
     public float speedFactor = 1;
@@ -49,6 +51,9 @@
         KeyHandler ControllerComp = KeyHandler.getInstance();
         ControllerComp.BindAction(KeyEvent.VK_E,true, this::Interact);
         ControllerComp.BindAction(KeyEvent.VK_P, true,this::PauseGame);
+        ControllerComp.BindAction(KeyEvent.VK_W, true,this::Up);
+        ControllerComp.BindAction(KeyEvent.VK_S, true,this::Down);
+        ControllerComp.BindAction(KeyEvent.VK_ENTER, true,this::Enter);
     }
     public void update(float DeltaTime)
     {
@@ -96,6 +101,10 @@
             updateCurrentDirectionY(1);
             worldY -= (int)(speed * speedFactor);
         }
+
+
+
+
     }
 
     void handleLocationByCollision()
@@ -120,6 +129,35 @@
                     break;
             }
         }
+    }
+    void Up (){
+        if (KeyHandler.isKeyPressed(KeyEvent.VK_W)) {
+            GamePanel.getInstGamePanel().ui.commandNum--;
+            if (GamePanel.getInstGamePanel().ui.commandNum < 0){
+                GamePanel.getInstGamePanel().ui.commandNum = 2;
+            }
+        }
+    }
+    void Down (){
+        if (KeyHandler.isKeyPressed(KeyEvent.VK_S)) {
+            GamePanel.getInstGamePanel().ui.commandNum++;
+            if (GamePanel.getInstGamePanel().ui.commandNum > 2){
+                GamePanel.getInstGamePanel().ui.commandNum = 0;
+            }
+        }
+    }
+    void Enter ()
+    {
+        if(GamePanel.getInstGamePanel().gameState != GameState.Tittle) return;
+        if (GamePanel.getInstGamePanel().ui.commandNum == 0)
+        {
+            GamePanel.getInstGamePanel().gameState = GameState.Run;
+        }
+        if(GamePanel.getInstGamePanel().ui.commandNum == 2 ){
+            System.exit(0);
+        }
+
+
     }
     void PauseGame() {
         if (KeyHandler.isKeyPressed(KeyEvent.VK_P)) {
Index: src/CoreGame/Enums/GameState.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package CoreGame.Enums;\r\n\r\npublic enum GameState {\r\n    Run, Pause;\r\n}\r\n
===================================================================
diff --git a/src/CoreGame/Enums/GameState.java b/src/CoreGame/Enums/GameState.java
--- a/src/CoreGame/Enums/GameState.java	(revision ee2ce28acc424c28badef1ca67306f979ea44b42)
+++ b/src/CoreGame/Enums/GameState.java	(date 1734183403494)
@@ -1,5 +1,5 @@
 package CoreGame.Enums;
 
 public enum GameState {
-    Run, Pause;
+    Run, Pause, Tittle;
 }
